{
	"info": {
		"_postman_id": "ab43e92b-a412-46cc-b961-dd2baffc3747",
		"name": "hw5_justboat",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Create Boat",
			"item": [
				{
					"name": "add boat 201",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4ecff411-7a3b-42dc-b33a-52116065953c",
								"exec": [
									"pm.environment.set(\"boat_id\", pm.response.json()[\"id\"]);",
									"",
									"pm.test(\"201 status code\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"",
									"pm.test(\"content is valid\", function () {",
									"    pm.expect(pm.response.json()[\"name\"]).to.eq(\"Odyssey\");",
									"    pm.expect(pm.response.json()[\"type\"]).to.eq(\"Yatch\");",
									"    pm.expect(pm.response.json()[\"length\"]).to.eq(99);",
									"    const self_url = pm.environment.get(\"app_url\") + \"/boats/\" + pm.response.json()[\"id\"];",
									"    pm.expect(pm.response.json()[\"self\"]).to.eq(self_url);",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"Odyssey\",\r\n  \"type\": \"Yatch\",\r\n  \"length\": 99\r\n}"
						},
						"url": {
							"raw": "{{app_url}}/boats",
							"host": [
								"{{app_url}}"
							],
							"path": [
								"boats"
							]
						}
					},
					"response": []
				},
				{
					"name": "add boat 2 201",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4ecff411-7a3b-42dc-b33a-52116065953c",
								"exec": [
									"pm.environment.set(\"boat_id_3\", pm.response.json()[\"id\"]);",
									"",
									"pm.test(\"201 status code\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"",
									"pm.test(\"content is valid\", function () {",
									"    pm.expect(pm.response.json()[\"name\"]).to.eq(\"nickOddesy\");",
									"    pm.expect(pm.response.json()[\"type\"]).to.eq(\"Yatch\");",
									"    pm.expect(pm.response.json()[\"length\"]).to.eq(99);",
									"    const self_url = pm.environment.get(\"app_url\") + \"/boats/\" + pm.response.json()[\"id\"];",
									"    pm.expect(pm.response.json()[\"self\"]).to.eq(self_url);",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"nickOddesy\",\r\n  \"type\": \"Yatch\",\r\n  \"length\": 99\r\n}"
						},
						"url": {
							"raw": "{{app_url}}/boats",
							"host": [
								"{{app_url}}"
							],
							"path": [
								"boats"
							]
						}
					},
					"response": []
				},
				{
					"name": "add boat 403 non unique",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4ecff411-7a3b-42dc-b33a-52116065953c",
								"exec": [
									"pm.test(\"403 status code\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"Odyssey\",\r\n  \"type\": \"Yatch\",\r\n  \"length\": 99\r\n}"
						},
						"url": {
							"raw": "{{app_url}}/boats",
							"host": [
								"{{app_url}}"
							],
							"path": [
								"boats"
							]
						}
					},
					"response": []
				},
				{
					"name": "add boat with missing attributes 400 Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4ecff411-7a3b-42dc-b33a-52116065953c",
								"exec": [
									"pm.test(\"400 status code\", function () {",
									"    pm.response.to.have.status(400);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"Odyssey\",\r\n  \"type\": \"Yatch\"\r\n}"
						},
						"url": {
							"raw": "{{app_url}}/boats",
							"host": [
								"{{app_url}}"
							],
							"path": [
								"boats"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "View Boat",
			"item": [
				{
					"name": "get boat 200 Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5539477a-9ff5-429b-979b-af285e94fa56",
								"exec": [
									"pm.test(\"200 status code\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"pm.test(\"content is valid\", function () {",
									"    pm.expect(pm.response.json()[\"name\"]).to.eq(\"Odyssey\");",
									"    pm.expect(pm.response.json()[\"type\"]).to.eq(\"Yatch\");",
									"    pm.expect(pm.response.json()[\"length\"]).to.eq(99);",
									"    const self_url = pm.environment.get(\"app_url\") + \"/boats/\" + pm.response.json()[\"id\"];",
									"    pm.expect(pm.response.json()[\"self\"]).to.eq(self_url);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{app_url}}/boats/{{boat_id}}",
							"host": [
								"{{app_url}}"
							],
							"path": [
								"boats",
								"{{boat_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "get boat 200 html",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5539477a-9ff5-429b-979b-af285e94fa56",
								"exec": [
									"pm.test(\"200 status code\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"pm.test(\"Content-Type is present\", function () {",
									"    pm.response.to.have.header(\"Content-Type\");",
									"    pm.response.to.have.header(\"Content-Type\",\"text/html; charset=utf-8\")",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "text/html",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{app_url}}/boats/{{boat_id}}",
							"host": [
								"{{app_url}}"
							],
							"path": [
								"boats",
								"{{boat_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "get boat 200 json",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5539477a-9ff5-429b-979b-af285e94fa56",
								"exec": [
									"pm.test(\"200 status code\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"pm.test(\"Content-Type is present\", function () {",
									"    pm.response.to.have.header(\"Content-Type\");",
									"    pm.response.to.have.header(\"Content-Type\",\"application/json\")",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{app_url}}/boats/{{boat_id}}",
							"host": [
								"{{app_url}}"
							],
							"path": [
								"boats",
								"{{boat_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "get boat 406 PDF",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5539477a-9ff5-429b-979b-af285e94fa56",
								"exec": [
									"pm.test(\"200 status code\", function () {",
									"    pm.response.to.have.status(406);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/pdf",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{app_url}}/boats/{{boat_id}}",
							"host": [
								"{{app_url}}"
							],
							"path": [
								"boats",
								"{{boat_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "get boat wiht invalid id 404 Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5539477a-9ff5-429b-979b-af285e94fa56",
								"exec": [
									"pm.test(\"404 not found\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"",
									"pm.test(\"404 error message\", function () {",
									"     pm.expect(pm.response.json()[\"Error\"]).to.eq(\"No boat with this boat_id exists\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{app_url}}/boats/{{invalid_boat_id_2}}",
							"host": [
								"{{app_url}}"
							],
							"path": [
								"boats",
								"{{invalid_boat_id_2}}"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Edit Boat",
			"item": [
				{
					"name": "edit boat 200 Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c7a74f9c-2581-40ca-9996-ba107147f762",
								"exec": [
									"pm.test(\"200 status code\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"content is valid\", function () {",
									"    pm.expect(pm.response.json()[\"name\"]).to.eq(\"Odyssey II\");",
									"    pm.expect(pm.response.json()[\"type\"]).to.eq(\"Mega Yatch\");",
									"    pm.expect(pm.response.json()[\"length\"]).to.eq(200);",
									"    const self_url = pm.environment.get(\"app_url\") + \"/boats/\" + pm.response.json()[\"id\"];",
									"    pm.expect(pm.response.json()[\"self\"]).to.eq(self_url);",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"Odyssey II\",\r\n  \"type\": \"Mega Yatch\",\r\n  \"length\": 200\r\n}"
						},
						"url": {
							"raw": "{{app_url}}/boats/{{boat_id}}",
							"host": [
								"{{app_url}}"
							],
							"path": [
								"boats",
								"{{boat_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "edit boat 403",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c7a74f9c-2581-40ca-9996-ba107147f762",
								"exec": [
									"pm.test(\"403 non unique\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"Odyssey II\",\r\n  \"type\": \"Mega Yatch\",\r\n  \"length\": 200\r\n}"
						},
						"url": {
							"raw": "{{app_url}}/boats/{{boat_id_3}}",
							"host": [
								"{{app_url}}"
							],
							"path": [
								"boats",
								"{{boat_id_3}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "edit boat with missing attributes 400 Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c7a74f9c-2581-40ca-9996-ba107147f762",
								"exec": [
									"pm.test(\"200 status code\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"Odyssey II\",\r\n  \"length\": 200\r\n}"
						},
						"url": {
							"raw": "{{app_url}}/boats/{{boat_id}}",
							"host": [
								"{{app_url}}"
							],
							"path": [
								"boats",
								"{{boat_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "put boat 303",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2aaa2423-4ef3-45e2-8ec4-f6561a7c77ae",
								"exec": [
									"pm.test(\"303 status code\", function () {",
									"    pm.response.to.have.status(303);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"Odyssey\",\r\n  \"type\": \"Yatch\",\r\n  \"length\": 99\r\n}"
						},
						"url": {
							"raw": "{{app_url}}/boats/{{boat_id}}",
							"host": [
								"{{app_url}}"
							],
							"path": [
								"boats",
								"{{boat_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "edit boat with invalid id 404",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c7a74f9c-2581-40ca-9996-ba107147f762",
								"exec": [
									"pm.test(\"404 boat not found\", function () {",
									"    pm.response.to.have.status(404);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"Odyssey II\",\r\n   \"type\": \"Mega Yatch\",\r\n  \"length\": 200\r\n}"
						},
						"url": {
							"raw": "{{app_url}}/boats/{{invalid_boat_id}}",
							"host": [
								"{{app_url}}"
							],
							"path": [
								"boats",
								"{{invalid_boat_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "edit all boats 405",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c7a74f9c-2581-40ca-9996-ba107147f762",
								"exec": [
									"pm.test(\"404 not found\", function () {",
									"    pm.response.to.have.status(405);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"Odyssey II\",\r\n   \"type\": \"Mega Yatch\",\r\n  \"length\": 200\r\n}"
						},
						"url": {
							"raw": "{{app_url}}/boats",
							"host": [
								"{{app_url}}"
							],
							"path": [
								"boats"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Delete Boat",
			"item": [
				{
					"name": "delete boat 204 Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2cac53f7-2029-4485-a74e-8660fec6b45b",
								"exec": [
									"pm.test(\"204 no content\", function () {",
									"    pm.response.to.have.status(204);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{app_url}}/boats/{{boat_id}}",
							"host": [
								"{{app_url}}"
							],
							"path": [
								"boats",
								"{{boat_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete boat 204",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2cac53f7-2029-4485-a74e-8660fec6b45b",
								"exec": [
									"pm.test(\"204 no content\", function () {",
									"    pm.response.to.have.status(204);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{app_url}}/boats/{{boat_id_3}}",
							"host": [
								"{{app_url}}"
							],
							"path": [
								"boats",
								"{{boat_id_3}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete fake boat 404",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2cac53f7-2029-4485-a74e-8660fec6b45b",
								"exec": [
									"pm.test(\"404 status code\", function () {",
									"    pm.response.to.have.status(404);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{app_url}}/boats/{{invalid_boat_id}}",
							"host": [
								"{{app_url}}"
							],
							"path": [
								"boats",
								"{{invalid_boat_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete all boats 405",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2cac53f7-2029-4485-a74e-8660fec6b45b",
								"exec": [
									"pm.test(\"404 status code\", function () {",
									"    pm.response.to.have.status(405);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{app_url}}/boats",
							"host": [
								"{{app_url}}"
							],
							"path": [
								"boats"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"protocolProfileBehavior": {}
}